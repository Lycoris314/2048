@charset "utf-8";
@import url("https://fonts.googleapis.com/css2?family=Stick&display=swap");

:root {
    --green: darkgreen;
    --moveTime: 300ms;
    --expandTime: 200ms;
}

body {
    margin: 0;
    font-family: "Stick", sans-serif;
}

button {
    cursor: pointer;
    font-family: "Stick", sans-serif;
}

.container {
    position: relative;
    width: max-content;
    height: max(100vh, 950px);
    margin: 0 auto;
    padding: 0 40px;
    border-left: 1px solid silver;
    border-right: 1px solid silver;
    background-color: antiquewhite;
    box-shadow: 0 0 10px 10px silver;
}

header {
    padding: 10px 0;
    display: flex;
    justify-content: space-between;
}

h1 {
    font-size: 2.2rem;
}

div.scores {
    display: flex;
    gap: 10px;

    div.score {
        background-color: var(--green);
        color: white;
        padding: 5px 10px;
        margin: 10px 0;
        border-radius: 10px;
        display: grid;
        place-content: center;
        width: 100px;

        > p {
            text-align: center;
            margin: 0;
        }
    }
}

$CELL_NUM: 4;
$FIELD_SIZE: 630;
$GAP: 10;
$CELL_SIZE: calc(($FIELD_SIZE - ($CELL_NUM - 1) * $GAP) / $CELL_NUM);

main {
    display: grid;
    grid-template-columns: repeat($CELL_NUM, 1fr);
    grid-template-rows: repeat($CELL_NUM, 1fr);
    gap: $GAP + px;
    padding: $GAP + px;
    width: $FIELD_SIZE + px;
    height: $FIELD_SIZE + px;
    background-color: var(--green);
    position: relative;

    > div.cell {
        background-color: rgb(0, 60, 0);
        border-radius: 5px;
    }
}

.panel {
    width: $CELL_SIZE + px;
    height: $CELL_SIZE + px;
    position: absolute;
    border-radius: 5px;
    display: grid;
    place-content: center;
    font-size: 2rem;
    font-weight: bold;
    transition: var(--moveTime);
    z-index: 2;
    &.show {
        z-index: 1;
        animation: var(--moveTime) panel-show;
    }
    &.unionAnimation {
        animation: var(--expandTime) var(--moveTime) union-animation;
    }
}

@keyframes panel-show {
    from {
        scale: 0;
    }
    to {
        scale: 1;
    }
}

@keyframes union-animation {
    from {
        scale: 1;
    }
    50% {
        scale: 1.3;
    }
    to {
        scale: 1;
    }
}

@for $i from 0 to $CELL_NUM {
    @for $j from 0 to $CELL_NUM {
        .panel.pos#{$i}#{$j} {
            top: #{$GAP + ($CELL_SIZE + $GAP) * $i} + px;
            left: #{$GAP + ($CELL_SIZE + $GAP) * $j} + px;
        }
    }
}

div.gameOver,
div.gameClear {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgb(0, 0, 0, 0.5);
    z-index: -1;
    &.show {
        z-index: 4;
    }
    display: grid;
    place-content: center;

    > p {
        color: white;
        text-align: center;
        font-size: 2rem;
    }
}

div.btns {
    display: flex;
    gap: 30px;
    width: 300px;
}

button.restart,
button.continue {
    display: block;
    width: 80%;
    height: 40px;
    margin: 40px auto;
    background-color: white;
    &:hover {
        background-color: rgb(240, 251, 230);
    }
    border: 2px solid var(--green);
    border-radius: 10px;
    font-weight: bold;
    transition: 0.3s;
}

button.rule {
    position: absolute;
    bottom: 0;
    right: 50px;
    background-color: var(--green);
    &:hover {
        background-color: green;
    }
    color: white;
    width: 100px;
    height: 50px;
    border-radius: 20px 20px 0 0;
    border: none;
    z-index: 50;
    font-size: 1.2rem;
    transition: 0.3s;
}

div.rulePage {
    background-color: white;
    width: 80%;
    height: 100%;
    margin: 50px auto 0;
    padding: 10px;
    font-size: 1.1rem;

    > p {
        font-family: sans-serif;
    }
}

div.ruleBack {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 100%;
    &.show {
        top: 0;
    }
    background-color: rgb(0, 0, 0, 0.7);
    z-index: 10;
    transition: 0.5s;
}

span.bold {
    font-weight: bold;
    font-size: 1.5rem;
}

p.under {
    text-decoration: underline;
}
